<!--
  Created by: Mai Van Manh
  Date: 11/02/2020
-->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Danh sách người dùng</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css    ">
  <link rel="stylesheet" href="../public/stylesheets/style.css">

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://cdn.socket.io/4.5.0/socket.io.min.js" integrity="sha384-7EyYLQZgWBi67fBtVxw60/OWl1kjsfrPFcaU0pp0nAh+i8FD068QogUvg85Ewy1k" crossorigin="anonymous"></script>
  <style>
      * {
  box-sizing: border-box;
}

.user {
  display: flex;
  align-items: center;
  padding: 12px 24px;
  cursor: pointer;
}

.user:nth-child(odd) {
  background-color: #F4F5F7;
}

.user:hover {
  background-color: #E6EFFF;
  transition: 0.3s;
}

.avatar {
  font-weight: bold;
  font-size: 1.5rem;
  background-color: deepskyblue;
  width: 50px;
  height: 50px;
  margin-right: 16px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: white
}

.user-info {
  height: 50px;
  flex-grow: 1;
}

.user-name {
  font-size: 1.1rem;

}

.user-info .online {
  font-size: 0.9rem;
  color: rgb(99, 99, 99)
}

.user .status {
  width: 90px;
  text-align: center;
}

.user:hover {
  background-color: #E6EFFF;
}

.user:hover .avatar {
  background-color: rgb(7, 142, 204);
  transition: 0.3s;
}

.user:hover .user-name {
  font-weight: 450;
  transition: 0.3s;
}

.conversation {
  background-color: rgb(175, 175, 175);
  padding: 24px;
  height: 75vh;
  overflow: auto;
}

.message {
  border-radius: 8px;
  padding: 12px;
  margin-bottom: 12px;
  width: max-content;
  max-width: 60%;
  font-size: 0.9rem;
}

.img-message {
  border-radius: 8px;
  margin-bottom: 12px;
  width: max-content;
  max-width: 50%;
}
.img-message img {
  max-width: 100%;
  border-radius: 12px;
}
.img-message img:hover {
   opacity: 0.85;
}

.my-message {
  border-radius: 12px;
  background-color: #DBEAFE;
}
.my-message:hover {
  background-color: #b4cbe9;
  transition: 0.3s;
}

.their-message {
  border-radius: 12px;
  background-color: white;
  margin-left: auto;
  margin-right: 0;
}
.their-message:hover {
  background-color: rgb(231, 231, 231);
  transition: 0.3s;
}
.message .time {
  margin-top: 2px;
  display: block;
  font-size: 0.8rem;
  color: rgb(102, 102, 102);
}

.message-input {
  border-top: 1px solid rgb(190, 190, 190);
  display: flex;
  position: relative;
}
#typing {
    background-color: rgb(242, 251, 255);
    border-radius: 4px;
    padding: 4px 8px;
    width: fit-content;
    font-size: 0.7em;
    position: absolute;
    top: -25px;
    left: 2px;
}

.message-input input[type="text"] {
    flex-grow: 1;
    border: none;
    padding: 8px 16px;
}

.message-input input[type="text"]:focus {
  border: none;
  outline: none;
  transition: 0.3s;
} 

.message-input a{
  text-decoration: none;
  padding: 8px;
  margin: 8px;
}
.message-input a:hover{
  background-color: rgb(215, 229, 255);
  border-radius: 4px;
  cursor: pointer;
}

.user .actions {
   color:rgb(161, 161, 161);
   font-size: 1.2rem;
}
.user .actions i {
   display: inline-block;
    border-radius: 8px;
   padding: 12px;
}
.user .actions i:hover {
   display: inline-block;
   color:rgb(128, 128, 128);
   background-color: rgb(215, 229, 255);
   transition: 0.3s;
}

  </style>
</head>

<body>
  <div class="container">
    <div class="row d-flex flex-row-reverse p-2" >
       <a class="btn btn-danger" href="/logout">Đăng xuất | {{username}}</a>
    </div>
    <div class="row d-flex flex-row-reverse p-1">
            <span>Login as {{email}}</span>
    </div>
    <div class="row justify-content-center">
      <div class="col-md-4">
        <div class="rounded border mt-3 mb-3">
          <h4 class="text-primary text-center my-5">Danh sách người dùng trực tuyến</h4>
          <p style="padding: 0 24px">Số người online: <strong id="user-count" class="badge badge-danger badge-pill">0</strong></p>
          <div id="user-list" class="people">
            {{!-- <div class="user">
              <div class="avatar">C</div>
              <div class="user-info">
                <div class="user-name">Phạm Công Chánh</div>
                <div class="online">Truy cập lúc: 16:45'</div>
              </div>
              <div class="status">
                <div class="badge badge-success badge-pill">Đang rảnh</div>
              </div>
            </div>

            <div class="user">
              <div class="avatar">D</div>
              <div class="user-info">
                <div class="user-name">Vũ Đình Duy</div>
                <div class="online">Truy cập : 16:45'</div>
              </div>
              <div class="status">
                <div class="badge badge-success badge-pill">Đang rảnh</div>
              </div>

            </div>

            <div class="user">
              <div class="avatar">K</div>
              <div class="user-info">
                <div class="user-name">Trần Vũ Khoa</div>
                <div class="online">Truy cập lúc: 16:45'</div>
              </div>
              <div class="status">
                <div class="badge badge-warning badge-pill">Đang bận</div>
              </div>
            </div>

            <div class="user">
              <div class="avatar">P</div>
              <div class="user-info">
                <div class="user-name">Quách Phạm</div>
                <div class="online">Truy cập lúc: 16:45'</div>
              </div>
              <div class="status">
                <div class="badge badge-success badge-pill">Đang rảnh</div>
              </div>
            </div>

            <div class="user">
              <div class="avatar">K</div>
              <div class="user-info">
                <div class="user-name">Lê Duy Khang</div>
                <div class="online">Truy cập lúc: 16:45'</div>
              </div>
              <div class="status">
                <div class="badge badge-warning badge-pill">Đang bận</div>
              </div>
            </div> --}}
          </div>
        </div>
        <p class="small">Danh sách này cần được cập nhật tự động mỗi khi có người dùng đăng nhập hoặc đăng xuất/thoát.
          Ngoài ra trạng thái của mỗi người dùng cũng cần được cập nhật mỗi khi họ tham gia hoặc rời một cuộc trò
          chuyện.</p>
        <p class="small">Để cho đơn giản, trang web chỉ cần hỗ trợ với mỗi người vào một thời điểm, không thể chat với người có trạng thái là <strong>đang bận</strong>.</p>
      </div>
      <div class="col-md-8">
        <div class="rounded border mt-3 mb-3">
          <div class="user">
            <div class="avatar">C</div>
            <div class="user-info">
              <div id="chat-username" class="user-name">Select a conversation</div>
              <div class="online">Vừa mới truy cập</div>
            </div>
            <div class="actions">
              <i class="fas fa-phone-alt"></i>
              <i class="fas fa-video"></i>
              <i class="fas fa-search"></i>
            </div>
          </div>
          <div id="conversation" class="conversation">
              <div class="d-flex content-justify-center">
                 <span>Select a conversation to chat</span>
              </div>
              {{!-- <div class="message my-message">Ra quân chiến dịch Xuân tình nguyện năm 2021
                <span class="time">08:59</span>
              </div>
              <div class="message my-message">Sáng ngày 28/01/2021, Hội sinh viên Trường Đại học Tôn Đức Thắng (TDTU) đã tổ chức lễ ra quân chiến dịch Xuân tình nguyện TDTU năm 2021.
                <span class="time">08:59</span>
              </div>
              <div class="img-message my-message">
                <img src="https://tdtu.edu.vn/sites/www/files/articles/2021/Jan/Xuan-tinh-nguyen/xuan_tinh_nguyen_2.jpg">
              </div>
              <div class="message their-message">OK! Rất rốt
                <span class="time">08:59</span>
              </div>
              <div class="message their-message">Mình cũng sẽ đăng ký tham gia
                <span class="time">08:59</span>
              </div>
              <div class="message their-message">Theo kế hoạch, chiến dịch diễn ra từ ngày 28/01 đến ngày 06/02/2021, huy động khoảng 1.250 chiến sĩ với 2 mặt trận cấp trường và cấp cơ sở.
                <span class="time">08:59</span>
              </div>
              <div class="message my-message">Đây là hoạt động truyền thống của Hội sinh viên TDTU trong suốt 13 năm qua.
                <span class="time">08:59</span>
              </div>
              <div class="message my-message">Chúc mọi người năm mới vui vẻ
                <span class="time">08:59</span>
              </div>
              <div class="message their-message">Cám ơn mọi người
                <span class="time">08:59</span>
              </div>
              <div class="message their-message">Mình cũng chúc mọi người năm mới phát tài
                <span class="time">08:59</span>
              </div>
              <div class="img-message their-message">
                <img src="https://media.truyenhinhdulich.vn/upload/news/2300_binh_phuoc_khai_mac_duong_hoa_xuan_tet_ky_hoi.jpg">
              </div> --}}
          </div>
          <div class="message-input">
            <div id="typing" style="opacity: 0;">Unknown đang soạn tin...</div>
            <input id="message-input" type="text" placeholder="Nhập tin nhắn" onkeypress="notifyTyping(event)">
            <a href="#" onclick="sendMessageBtn(event)">Gửi</a>
          </div>
        </div>
     
      </div>
    </div>

    <div id="online-notification" class="alert alert-success d-inline position-fixed small" style="bottom: 20px; left: 20px;opacity: 0">
      <strong>Trần Quang Trí</strong> vừa mới online
    </div>
    <div id="offline-notification" class="alert alert-danger d-inline position-fixed small" style="bottom: 20px; right: 20px;opacity: 0">
      <strong>Trần Quang Trí</strong> đã thoát khỏi ứng dụng
    </div>

</body>
<script>

  const email = "{{{email}}}"
  let onlineUsers = []
  let username = "{{{username}}}"
  let current_receiver = {}
  username = String(username)
  console.log("Username")
  console.log(username)
  let socket

  function requestMessages(e,receiver_email,receiver_id){
    console.log("click oke")
    console.log(email)

    //update informtion of chat screen:
    $('#chat-username').html(username)
    $('#typing').html(username+" đang soạn tin")


    current_receiver.email = receiver_email
    current_receiver.id = receiver_id
    console.log(current_receiver)
    socket.emit('request-messages',email,receiver_email)
  }

  window.onload = () =>{
    socket = io();
    socket.on('connect',handleConnectionSuccess)
    socket.on('list-users',handleUserList)
    socket.on('disconnect', ()=> console.log('Client has been disconnect'))
    socket.on('new-user',handleNewUser)
    socket.on('user-leave',handleUserLeave)
    socket.on('register-name',handleRegister)
    socket.on('list-messages',handleRetrieveMessage)
    socket.on('typing',handleTyping)
    socket.on('send-message',handleGetMessage)
  }

  function handleRegister(data){
      let {id,username,email} = data
      console.log()
      let user = onlineUsers.find(u=> u.id == id)
      if(!user){
          return console.log("Can't not find the user with id: "+id)
      }
      user.username = username
      user.email = email
      displayUser(user)
      console.log(`Client ${id} registered with username: ${username}`)
      notifyOnline(username)
  }
  
  function handleConnectionSuccess(){
      console.log('Client connects. '+socket.id);
      console.log("Socket information")
      console.log(socket)
      username = sessionStorage.getItem('username_lunar') ? sessionStorage.getItem('username_lunar') : username
      if(username){
        console.log("Username tu sessionStorage la: "+username)
      }
      while(!username){
          username = prompt('Enter your name')
          sessionStorage.setItem('username_lunar',username)
      }
      socket.emit('register-name',username,email)
  }

  function handleUserList(users){
    console.log('Received user list.')
    console.log("users")
    console.log(users)
    users.forEach(u=>{
      console.log(u)
      if(u.id !== socket.id){
        onlineUsers.push(u);
        displayUser(u)
      }
    })
  }

  function handleNewUser(user){
    console.log('New person is connecting.')
    console.log(user)
    onlineUsers.push(user)
  }

  function handleUserLeave(id){
    let user = onlineUsers.find(u=> u.id ==id)
    console.log(`User ${id} left, remain ${onlineUsers.length} users in the room.`)
    removeUser(id)
    notifyOffline(user.username)
  }

  function handleTyping(){
    $('#typing').fadeTo(800,1)
    setTimeout(()=>{
      $('#typing').fadeTo(800,0)
    },4500)
  }

  function handleRetrieveMessage(messages){
    console.log("messages")
    console.log(messages)

    $('#conversation').html('')

    messages.forEach(message=>{
      console.log("message")
      console.log(message)
      let messClass = "message their-message"
      if(message.sender == email)
        messClass = "message my-message"
      let messDiv = $(`
        <div class="${messClass}">${message.content}
          <span class="time">${message.createdAt}</span>
        </div>
      `)
      console.log(messDiv)
      $('#conversation').append(messDiv)
    })
  }

  function handleGetMessage(message){
    
    let messDiv = $(`
          <div class="message their-message">${message.message}
            <span class="time">${message.createdAt}</span>
          </div>
    `)
    $('#conversation').append(messDiv)
  }

  function removeUser(id){
      $(`#${id}`).remove();
      $('#user-count').html($('#user-list .user').length)
  }

  function displayUser(user){
      console.log("display user")
      console.log(user)
      
      let status = user.free ? '<div class="badge badge-success badge-pill">Đang rãnh</div>' : '<div class="badge badge-warning badge-pill">Đang bận</div>'
      let userDiv = $(`
            <div id="${user.id}" class="user" onclick='requestMessages(event,"${user.email}",this.id)'>
              <div class="avatar">${user.username[0].toUpperCase()}</div>
              <div class="user-info">
                <div class="user-name" style="overflow: hidden;
                white-space: nowrap;
                text-overflow: ellipsis;">
                    ${user.username}</div>
                <div class="online">Truy cập: ${user.loginAt}</div>
              </div>
              <div class="status">
                ${status}
              </div>
            </div>
      `)
      $('#user-list').append(userDiv)
      $('#user-count').html($('#user-list .user').length)
  }

  function sendMessage(message){
    let createdAt  = new Date().toLocaleDateString()
    let messDiv = $(`
          <div class="message my-message">${message}
            <span class="time">${createdAt}</span>
          </div>
    `)
    $('#conversation').append(messDiv)

    mess = {message: message,sender_email: email,receiver_email: current_receiver.email,receiver_id: current_receiver.id}
    socket.emit('send-message',mess)
  }

  function notifyOnline(username){
    $('#online-notification strong').html(username)
    $('#online-notification').fadeTo(2000,1)
    setTimeout(()=>{
      $('#online-notification').fadeTo(2000,0)
    },4500)
  }

  function notifyOffline(username){
    $('#offline-notification strong').html(username)
    $('#offline-notification').fadeTo(2000,1)
        setTimeout(()=>{
      $('#offline-notification').fadeTo(2000,0)
    },4500)
  }

  function notifyTyping(e){

    if(e.keyCode===13){
      if(e.target.value.trim().length >0)
        {
          sendMessage(e.target.value)
          e.target.value = ""
        }
    }
    else{
          console.log("typing...")
          socket.emit('typing',current_receiver.id)
    }

  }

  function sendMessageBtn(e){
    let input = document.getElementById('message-input')
    if(input.value.trim().length >0)
      {
        sendMessage(input.value)
        input.value = ""
      }
  }
</script>
</html>